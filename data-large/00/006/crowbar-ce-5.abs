module Counterexample;
interface Ce { Unit ce(); }

class CeFrame implements Ce {
	String fi = null;
	String ffb = "fut_28";
	Int fint = 0;

	Unit ce() {
		// Snippet from: unknown
		// while((!isDone && False)){} 
		// Known true:
		// Negated loop guard: !((!isDone && False))
		// Loop invariant: true
		
		// Assume the following pre-state:
		String x = "fut_28";
		Bool isDone = False;
		// End of setup
		
		// this.ffb = this.fi!b();
		this.ffb = "fut_28";
		Int queueCounter = 300;
		// Fut resetFlag = this.fi!n();
		String resetFlag = "fut_29";
		// resetFlag = this.fi!n();
		resetFlag = "fut_30";
		this.ffb = x;
		Bool willWrite = !True;
		isDone = (this.fint > -160);
		
		// Proof failed here. Trying to show:
		// Null-check: !(heap.fi=0)
		// Failed to show the following sub-obligations:
		// !(heap.fi=0)
	}
}

{
	Ce x = new CeFrame();
	x.ce();
}
