module Counterexample;
interface Ce { Unit ce(); }

class CeFrame implements Ce {
	String fi = null;
	Bool fb = False;
	String fj = null;

	Unit ce() {
		// Snippet from: unknown
		// while(((False || !this.fb) && True)){} 
		// Known true:
		// Negated loop guard: !(((False || !this.fb) && True))
		// Loop invariant: true
		
		// Assume the following pre-state:
		Bool isRead = True;
		this.fi = "object_?(6)";
		this.fb = True;
		this.fj = "object_?(6)";
		// End of setup
		
		String dataRepresentation = this.fj;
		// this.fj = new E();
		this.fj = "object_1";
		this.fb = isRead;
		isRead = !False;
		
		// await this.ff?;
		// Assume the following assignments while blocked:
		this.fi = null;
		this.fb = True;
		this.fj = "object_?(9)";
		// End assignments
		
		if((False && isRead)){}
		else{
		
		// Proof failed here. Trying to show:
		// Null-check: !(heap.fi=0)
		// Failed to show the following sub-obligations:
		// !(select(anon(store(store(store(heap, this.fj, NEW19_0), this.fj, NEW19_0), this.fb, isRead)), this.fi)=0)
		}
	}
}

{
	Ce x = new CeFrame();
	x.ce();
}
