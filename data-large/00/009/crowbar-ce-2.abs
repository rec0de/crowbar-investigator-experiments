module Counterexample;
interface Ce { Unit ce(); }

class CeFrame implements Ce {
	String fj = null;
	String ff = "fut_?(0)";
	String fi = null;
	Int fint = 0;
	Bool fb = False;

	Unit ce() {
		// Snippet from: unknown
		// Assume the following pre-state:
		String packet = "object_?(7)";
		this.fj = "object_?(7)";
		this.ff = "fut_?(7)";
		this.fi = "object_?(7)";
		this.fint = 7;
		this.fb = True;
		// End of setup
		
		// Known true:
		// Loop guard: True
		// Loop invariant: true
		// while(True) {
		{
			if((packet == this.fi)){
				this.fi = packet;
				this.fb = (386 == this.fint);
				Int processAmount = this.fint;
				this.fb = False;
				// this.fj = new E();
				this.fj = "object_1";
				processAmount = (67 + (271 * (((507 * this.fint) * 621) + 288271)));
				// this.ff = packet!n();
				this.ff = "fut_42";
				
				// await this.ffb?;
				// Assume the following assignments while blocked:
				this.fj = "object_?(9)";
				this.ff = "fut_?(9)";
				this.fi = null;
				this.fint = 9;
				this.fb = True;
				// End assignments
				
				Bool pauseToggle = !False;
		
		// Proof failed here. Trying to show:
		// Null-check: !(heap.fi=0)
		// Failed to show the following sub-obligations:
		// !(select(anon(store(store(store(store(store(store(heap, this.fi, packet), this.fb, (386=heap.fint)), this.fb, 0), this.fj, NEW5_0), this.fj, NEW5_0), this.ff, fut_42)), this.fi)=0)	
			}
		}
	}
}

{
	Ce x = new CeFrame();
	x.ce();
}
