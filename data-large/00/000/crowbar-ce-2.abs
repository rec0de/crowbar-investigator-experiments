module Counterexample;
interface Ce { Unit ce(); }

class CeFrame implements Ce {
	Int fint = 0;
	String fi = null;
	Bool fb = False;
	String ffb = "fut_?(0)";
	String fj = null;
	String ff = "fut_?(0)";

	Unit ce() {
		// Snippet from: unknown
		// Assume the following pre-state:
		this.fi = "object_?(6)";
		this.fb = True;
		this.ffb = "fut_?(6)";
		// End of setup
		
		this.fint = ((85 * this.fint) * this.fint);
		if(this.fb){
			String serverNode = this.fj;
			// this.ffb = this.fi!b();
			this.ffb = "fut_33";
			this.fb = this.fb;
			
			// await this.ff?;
			// Assume the following assignments while blocked:
			this.fint = 9;
			this.fi = null;
			this.fb = True;
			this.ffb = "fut_?(9)";
			// End assignments
			
			// Int stackAmount = (this.ff).get;
			// Future value irrelevant or unavailable, using default:
			Int stackAmount = 0;
			serverNode = serverNode;
		}
		Bool canWrite = ((!True && !False) && False);
		
		// Proof failed here. Trying to show:
		// Null-check: !(heap.fi=0)
		// Failed to show the following sub-obligations:
		// !(select(anon(store(store(store(heap, this.fint, ((85*heap.fint)*heap.fint)), this.ffb, fut_33), this.fb, heap.fb)), this.fi)=0)
	}
}

{
	Ce x = new CeFrame();
	x.ce();
}
