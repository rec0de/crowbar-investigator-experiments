module Counterexample;
interface Ce { Unit ce(); }

class CeFrame implements Ce {
	String fi = null;
	Bool fb = False;
	Int fint = 0;
	String fj = null;
	String ffb = "fut_?(0)";

	Unit ce() {
		// Snippet from: unknown
		// Assume the following pre-state:
		this.fi = "object_?(8)";
		this.fb = True;
		this.fint = 8;
		this.fj = "object_?(8)";
		this.ffb = "fut_32";
		// End of setup
		
		// Known true:
		// Loop guard: (this.fj == this.fj)
		// Loop invariant: true
		// while((this.fj == this.fj)) {
		{
			Bool isSaveed = this.fb;
			// Fut q = this.fi!n();
			String q = "fut_31";
			// this.ffb = this.fi!b();
			this.ffb = "fut_32";
			String tree = this.fi;
			
			// await this.fb;
			// Assume the following assignments while blocked:
			this.fi = "object_1";
			this.fb = True;
			this.fint = 1;
			this.fj = "object_1";
			this.ffb = "fut_?(1)";
			// End assignments
			
			// tree = new D();
			tree = "object_1";
			
			// await this.ffb?;
			// Assume the following assignments while blocked:
			this.fi = null;
			this.fb = False;
			this.fint = 0;
			this.fj = null;
			this.ffb = "fut_?(0)";
			// End assignments
			
			this.fi = this.fi;
			this.fint = 331;
		
		// Proof failed here. Trying to show:
		// Null-check: !(heap.fi=0)
		// Failed to show the following sub-obligations:
		// !(select(store(heap, this.fi, select(anon(anon(store(heap, this.ffb, fut_32))), this.fi)), this.fi)=0)
		}
	}
}

{
	Ce x = new CeFrame();
	x.ce();
}
