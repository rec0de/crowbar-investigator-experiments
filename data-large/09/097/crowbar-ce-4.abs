module Counterexample;
interface Ce { Unit ce(); }

class CeFrame implements Ce {
	Int fint = 0;
	Bool fb = False;
	String fi = null;
	String ff = "fut_?(0)";
	String fj = null;

	Unit ce() {
		// Snippet from: unknown
		// while(!!False){} 
		// Known true:
		// Negated loop guard: !(!!False)
		// Loop invariant: true
		
		// Assume the following pre-state:
		this.fint = 6;
		this.fb = True;
		this.fi = "object_?(6)";
		this.ff = "fut_?(6)";
		// End of setup
		
		}
		String message = this.fi;
		if((this.fb == False)){}
		else{
			if(True){
				
				// await this.ffb?;
				// Assume the following assignments while blocked:
				this.fint = 8;
				this.fb = True;
				this.fi = "object_?(8)";
				this.ff = "fut_?(8)";
				// End assignments
				
				Int processDepth = this.fint;
				this.fint = 373;
				// Fut returnInfo = message!b();
				String returnInfo = "fut_123";
				Bool writeEnabled = ((processDepth * 839) == 879);
				String node = this.fj;
				
				// await this.ffb?;
				// Assume the following assignments while blocked:
				this.fint = 24;
				this.fb = True;
				this.fi = "object_?(9)";
				this.ff = "fut_?(9)";
				// End assignments
				
				// I ioUnit = new D();
				String ioUnit = "object_1";
				
				// await !False;
				// Assume the following assignments while blocked:
				this.fint = 10;
				this.fb = True;
				this.fi = "object_?(10)";
				this.ff = "fut_?(10)";
				// End assignments
				
				
				// await returnInfo?;
				// Assume the following assignments while blocked:
				this.fint = 11;
				this.fb = True;
				this.fi = null;
				this.ff = "fut_?(11)";
				// End assignments
				
				// message = new D();
				message = "object_2";
				this.fint = 477;
				this.ff = this.ff;
				this.fb = False;
		
		// Proof failed here. Trying to show:
		// Null-check: !(heap.fi=0)
		// Failed to show the following sub-obligations:
		// !(select(anon(anon(anon(store(anon(heap), this.fint, 373)))), this.fi)=0)	
			}
		}
	}
}

{
	Ce x = new CeFrame();
	x.ce();
}
