module Counterexample;
interface Ce { Unit ce(); }

class CeFrame implements Ce {
	Int fint = 0;
	String fi = null;
	Bool fb = False;

	Unit ce() {
		// Snippet from: unknown
		// while((False && this.fb)){} 
		// Known true:
		// Negated loop guard: !((False && this.fb))
		// Loop invariant: true
		
		// Assume the following pre-state:
		this.fint = 5;
		this.fi = "object_?(5)";
		this.fb = True;
		// End of setup
		
		this.fint = 986;
		
		// await this.ff?;
		// Assume the following assignments while blocked:
		this.fint = 8;
		this.fi = "object_?(6)";
		this.fb = True;
		// End assignments
		
		this.fb = ((this.fb || this.fb) || False);
		
		// await this.ffb?;
		// Assume the following assignments while blocked:
		this.fint = 7;
		this.fi = null;
		this.fb = True;
		// End assignments
		
		}
		
		// Proof failed here. Trying to show:
		// Null-check: !(heap.fi=0)
		// Failed to show the following sub-obligations:
		// !(select(anon(store(anon(store(heap, this.fint, 986)), this.fb, ((select(anon(store(heap, this.fint, 986)), this.fb)||select(anon(store(heap, this.fint, 986)), this.fb))||0))), this.fi)=0)
	}
}

{
	Ce x = new CeFrame();
	x.ce();
}
