module Counterexample;
interface Ce { Unit ce(); }

class CeFrame implements Ce {
	Int fint = 0;
	String fi = null;
	Bool fb = False;
	String fj = null;
	String ffb = "fut_?(0)";
	String ff = "fut_?(0)";

	Unit ce() {
		// Snippet from: unknown
		// Assume the following pre-state:
		this.fint = 7;
		this.fb = True;
		this.fj = "object_?(7)";
		this.ffb = "fut_?(7)";
		// End of setup
		
		// Known true:
		// Loop guard: this.fb
		// Loop invariant: true
		// while(this.fb) {
		{
			this.fj = this.fj;
			// this.ffb = this.fi!b();
			this.ffb = "fut_30";
			Bool processFlag = (False && True);
			this.fj = this.fj;
			this.fj = this.fj;
			this.fint = 740;
			if(False){}
			else{
				// Int systemAmount = (this.ff).get;
				// Future value irrelevant or unavailable, using default:
				Int systemAmount = 0;
				String serverRepresentation = this.fi;
			}
		
		// Proof failed here. Trying to show:
		// Null-check: !(heap.fi=0)
		// Failed to show the following sub-obligations:
		// !(heap.fi=0)
		}
	}
}

{
	Ce x = new CeFrame();
	x.ce();
}
