module Counterexample;
interface Ce { Unit ce(); }

class CeFrame implements Ce {
	Int fint = 0;
	String ffb = "fut_?(0)";

	Unit ce() {
		// Snippet from: unknown
		// while((181 == listDepth)){} 
		// Known true:
		// Negated loop guard: !((181 == listDepth))
		// Loop invariant: true
		
		// Assume the following pre-state:
		Int listDepth = 182;
		this.fint = 1;
		// End of setup
		
		// J message = new E();
		String message = "object_1";
		Int j = ((213 * listDepth) + 496);
		Int stackCount = listDepth;
		if((True == False)){}
		else{
		
		}
		// Bool willExec = (this.ffb).get;
		// Future value irrelevant or unavailable, using default:
		Bool willExec = False;
		String clientStruct = message;
		Int eventDepth = -792;
		println(toString((282 * this.fint))); // return statement
		// Evaluates to: 282
		// Proof failed here. Trying to show:
		// Method postcondition: (result=0)
		// Object invariant: true
		// Failed to show the following sub-obligations:
		// ((282*heap.fint)=0)
	}
}

{
	Ce x = new CeFrame();
	x.ce();
}
