module Counterexample;
interface Ce { Unit ce(); }

class CeFrame implements Ce {
	String fi = null;
	Bool fb = False;
	String ff = "fut_?(0)";
	Int fint = 0;

	Unit ce() {
		// Snippet from: unknown
		// while(this.fb){} 
		// Known true:
		// Negated loop guard: !(this.fb)
		// Loop invariant: true
		
		// Assume the following pre-state:
		this.fi = "object_?(6)";
		this.fb = True;
		this.ff = "fut_?(6)";
		// End of setup
		
		// this.fi = new D();
		this.fi = "object_1";
		Int listCount = this.fint;
		Bool configOverride = (-105 == listCount);
		listCount = (stackCounter + 493);
		configOverride = ((774 * stackCounter) == (55 + this.fint));
		this.ff = this.ff;
		Int stackCounter = 933;
		if((((this.fi == this.fi) && False) && False)){}
		else{
			// Fut flushState = this.fi!b();
			String flushState = "fut_129";
			Int eventCounter = stackCounter;
			
			// await flushState?;
			// Assume the following assignments while blocked:
			this.fi = null;
			this.fb = True;
			this.ff = "fut_?(9)";
			// End assignments
			
		}
		
		// Proof failed here. Trying to show:
		// Null-check: !(heap.fi=0)
		// Failed to show the following sub-obligations:
		// !(select(anon(store(store(store(heap, this.fi, NEW19_0), this.fi, NEW19_0), this.ff, heap.ff)), this.fi)=0)
	}
}

{
	Ce x = new CeFrame();
	x.ce();
}
