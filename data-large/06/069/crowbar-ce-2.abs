module Counterexample;
interface Ce { Unit ce(); }

class CeFrame implements Ce {
	String fi = null;
	Bool fb = False;
	Int fint = 0;

	Unit ce() {
		// Snippet from: unknown
		// Assume the following pre-state:
		String message = "object_?(5)";
		Bool hasLoaded = True;
		this.fi = "object_?(4)";
		this.fb = True;
		// End of setup
		
		// Known true:
		// Loop guard: hasLoaded
		// Loop invariant: true
		// while(hasLoaded) {
		{
			Int listDepth = (this.fint * 780);
			this.fb = True;
			this.fi = message;
			Int eventCounter = 189;
			listDepth = this.fint;
			hasLoaded = ((False && this.fb) && hasLoaded);
			Bool readyOverride = (this.fb == True);
			
			// await this.ff?;
			// Assume the following assignments while blocked:
			this.fi = null;
			this.fb = True;
			// End assignments
			
			// J node = new E();
			String node = "object_1";
		
		// Proof failed here. Trying to show:
		// Null-check: !(heap.fi=0)
		// Failed to show the following sub-obligations:
		// !(select(anon(store(store(heap, this.fb, 1), this.fi, message)), this.fi)=0)
		}
	}
}

{
	Ce x = new CeFrame();
	x.ce();
}
