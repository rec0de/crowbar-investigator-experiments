module Counterexample;
interface Ce { Unit ce(); }

class CeFrame implements Ce {
	String fj = null;
	String ff = "fut_55";
	Int fint = 0;
	Bool fb = False;
	String fi = null;
	String ffb = "fut_55";

	Unit ce() {
		// Snippet from: unknown
		// while(False){} 
		// Known true:
		// Negated loop guard: !(False)
		// Loop invariant: true
		
		// Assume the following pre-state:
		String clientUnit = null;
		this.fj = "object_?(11)";
		this.ff = "fut_31";
		this.fint = 11;
		this.fb = True;
		this.fi = "object_?(11)";
		this.ffb = "fut_31";
		// End of setup
		
		// this.ff = dataRepresentation!n();
		this.ff = "fut_31";
		// I dataRepresentation = new D();
		String dataRepresentation = "object_1";
		Bool stateOverride = (((True || !True) || (this.fb && !False)) || False);
		// Int j = (this.ff).get;
		Int j = 0;
		j = 989;
		Int k = 693402;
		clientUnit = clientUnit;
		}
		// Fut q = this.fi!b();
		String q = "fut_32";
		if(!True){}
		else{
			if(!False){
				// Int systemAmount = (this.ff).get;
				Int systemAmount = 0;
				
				// await this.ff?;
				// Assume the following assignments while blocked:
				this.fj = "object_?(12)";
				this.ff = "fut_?(12)";
				this.fint = 12;
				this.fb = True;
				this.fi = "object_?(12)";
				this.ffb = "fut_?(12)";
				// End assignments
				
				Int eventAmount = systemAmount;
				q = q;
				this.fint = 593;
				
				// await q?;
				// Assume the following assignments while blocked:
				this.fj = "object_?(13)";
				this.ff = "fut_?(13)";
				this.fint = 13;
				this.fb = True;
				this.fi = null;
				this.ffb = "fut_?(13)";
				// End assignments
				
				// Fut resetReload = dataRepresentation!b();
				String resetReload = "fut_46";
			}
		}
		// q = this.fi!b();
		q = "fut_47";
		if(this.fb){}
		else{
		
		}
		}
		this.fb = (False && True);
		Bool isWrite = True;
		this.ff = this.ff;
		isWrite = this.fb;
		this.fj = clientUnit;
		this.fb = False;
		Bool willWrite = !this.fb;
		this.fj = clientUnit;
		this.fi = this.fi;
		this.ffb = this.ffb;
		Int i = -367;
		// this.ff = this.fi!n();
		this.ff = "fut_55";
		// this.fj = new E();
		this.fj = "object_2";
		
		// Proof failed here. Trying to show:
		// Null-check: !(heap.fi=0)
		// Failed to show the following sub-obligations:
		// !(select(store(heap, this.fi, select(anon(store(anon(store(heap, this.ff, fut_31)), this.fint, 593)), this.fi)), this.fi)=0)
	}
}

{
	Ce x = new CeFrame();
	x.ce();
}
