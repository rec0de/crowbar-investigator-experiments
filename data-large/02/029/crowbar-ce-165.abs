module Counterexample;
interface Ce { Unit ce(); }

class CeFrame implements Ce {
	String fi = null;
	Bool fb = False;
	String fj = null;
	String ff = "fut_?(0)";

	Unit ce() {
		// Snippet from: unknown
		// while(this.fb){} 
		// Known true:
		// Negated loop guard: !(this.fb)
		// Loop invariant: true
		
		// Assume the following pre-state:
		this.fi = "object_?(6)";
		this.fb = True;
		this.fj = "object_?(6)";
		this.ff = "fut_?(6)";
		// End of setup
		
		// Fut resState = serverUnit!b();
		String resState = "fut_239";
		
		// await resultInfo?;
		// Assume the following assignments while blocked:
		this.fi = null;
		this.fb = True;
		this.fj = "object_?(8)";
		this.ff = "fut_?(8)";
		// End assignments
		
		// this.ff = serverUnit!n();
		this.ff = "fut_240";
		if((False && (True == True))){}
		else{
			this.fj = this.fj;
			// Fut resultInfo = serverUnit!n();
			String resultInfo = "fut_293";
		
		// Proof failed here. Trying to show:
		// Null-check: !(heap.fi=0)
		// Failed to show the following sub-obligations:
		// !(select(anon(heap), this.fi)=0)
		}
	}
}

{
	Ce x = new CeFrame();
	x.ce();
}
