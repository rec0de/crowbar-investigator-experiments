module Counterexample;
interface Ce { Unit ce(); }

class CeFrame implements Ce {
	Int fint = 0;
	String ffb = "fut_?(0)";
	String fj = null;
	String fi = null;
	Bool fb = False;

	Unit ce() {
		// Snippet from: unknown
		// while((-this.fint > 1)){} 
		// Known true:
		// Negated loop guard: !((-this.fint > 1))
		// Loop invariant: true
		
		// Assume the following pre-state:
		String person = null;
		this.fint = -1;
		// End of setup
		
		this.ffb = this.ffb;
		
		// await this.ff?;
		// No heap modification info available at this point
		
		}
		Int i = 107;
		// I message = new D();
		String message = "object_1";
		// this.fj = new E();
		this.fj = "object_2";
		// this.fi = new D();
		this.fi = "object_3";
		}
		
		// await this.ff?;
		// No heap modification info available at this point
		
		Int queueCount = 936;
		Bool hasLoaded = this.fb;
		if((659 < queueCount)){
			Int j = 738;
			
			// await this.ffb?;
			// No heap modification info available at this point
			
			// this.fb = (this.ffb).get;
			// Future value irrelevant or unavailable, using default:
			this.fb = False;
		}
		
		// Proof failed here. Trying to show:
		// Null-check: !(person=0)
		// Failed to show the following sub-obligations:
		// !(person=0)
	}
}

{
	Ce x = new CeFrame();
	x.ce();
}
