module Counterexample;
interface Ce { Unit ce(); }

class CeFrame implements Ce {
	Int fint = 0;
	String fi = null;
	Bool fb = False;
	String ff = "fut_?(0)";

	Unit ce() {
		// Snippet from: unknown
		// while(False){} 
		// Known true:
		// Negated loop guard: !(False)
		// Loop invariant: true
		
		// Assume the following pre-state:
		this.fint = 2;
		this.fi = "object_?(2)";
		this.fb = True;
		this.ff = "fut_62";
		// End of setup
		
		Bool writeToggle = !False;
		this.fb = this.fb;
		this.fint = this.fint;
		if(writeToggle){
			// this.ff = this.fi!n();
			this.ff = "fut_62";
			
			// await this.ff?;
			// Assume the following assignments while blocked:
			this.fint = 0;
			this.fi = null;
			this.fb = False;
			this.ff = "fut_?(0)";
			// End assignments
			
		}
		
		// Proof failed here. Trying to show:
		// Null-check: !(heap.fi=0)
		// Failed to show the following sub-obligations:
		// !(select(anon(store(store(store(heap, this.fb, heap.fb), this.fint, heap.fint), this.ff, fut_62)), this.fi)=0)
	}
}

{
	Ce x = new CeFrame();
	x.ce();
}
