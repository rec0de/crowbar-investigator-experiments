module Counterexample;
interface Ce { Unit ce(); }

class CeFrame implements Ce {
	String fj = null;
	String fi = null;

	Unit ce() {
		// Snippet from: unknown
		// while(isSaveed){} 
		// Known true:
		// Negated loop guard: !(isSaveed)
		// Loop invariant: true
		
		// Assume the following pre-state:
		Bool isSaveed = True;
		this.fj = "object_?(5)";
		this.fi = "object_?(5)";
		// End of setup
		
		Int stackCount = 774;
		Bool isRead = !False;
		// I packet = new D();
		String packet = "object_1";
		// Fut x = this.fi!b();
		String x = "fut_39";
		Int arg = 456;
		Bool pauseToggle = ((False && isRead) && False);
		packet = this.fi;
		// this.fj = new E();
		this.fj = "object_2";
		// I person = new D();
		String person = "object_3";
		
		// await x?;
		// Assume the following assignments while blocked:
		this.fj = "object_?(6)";
		this.fi = "object_?(6)";
		// End assignments
		
		// isRead = (x).get;
		// Future value irrelevant or unavailable, using default:
		isRead = False;
		Bool hasReady = True;
		pauseToggle = (-422684 == 425);
		// Fut flushReload = person!b();
		String flushReload = "fut_40";
		isRead = (this.fi == person);
		String tree = message;
		// this.fi = new D();
		this.fi = "object_4";
		isRead = !False;
		Int listDepth = (listDepth + 911);
		
		// await True;
		// Assume the following assignments while blocked:
		this.fj = "object_?(10)";
		this.fi = "object_?(9)";
		// End assignments
		
		
		// await this.ff?;
		// Assume the following assignments while blocked:
		this.fj = "object_?(8)";
		this.fi = null;
		// End assignments
		
		
		// Proof failed here. Trying to show:
		// Null-check: !(heap.fi=0)
		// Failed to show the following sub-obligations:
		// !(select(anon(anon(store(store(anon(store(store(heap, this.fj, NEW23_0), this.fj, NEW23_0)), this.fi, NEW26_0), this.fi, NEW26_0))), this.fi)=0)
	}
}

{
	Ce x = new CeFrame();
	x.ce();
}
