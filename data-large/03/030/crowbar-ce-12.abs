module Counterexample;
interface Ce { Unit ce(); }

class CeFrame implements Ce {
	String fj = null;
	String ff = "fut_?(0)";
	Int fint = 0;
	String fi = null;
	String ffb = "fut_?(0)";

	Unit ce() {
		// Snippet from: unknown
		// Assume the following pre-state:
		this.fj = "object_?(7)";
		this.ff = "fut_?(7)";
		this.fint = 7;
		this.fi = "object_?(7)";
		this.ffb = "fut_?(7)";
		// End of setup
		
		// Known true:
		// Loop guard: (this.ffb == this.ffb)
		// Loop invariant: true
		// while((this.ffb == this.ffb)) {
		{
			this.ffb = this.ffb;
			if(True){
				this.fint = -670;
				// this.fi = new D();
				this.fi = "object_1";
				// this.ff = this.fi!n();
				this.ff = "fut_34";
				
				// await this.ffb?;
				// Assume the following assignments while blocked:
				this.fj = "object_?(9)";
				this.ff = "fut_?(9)";
				this.fint = 9;
				this.fi = null;
				this.ffb = "fut_?(9)";
				// End assignments
				
				this.fj = this.fj;
				// this.ffb = this.fi!b();
				this.ffb = "fut_35";
		
		// Proof failed here. Trying to show:
		// Null-check: !(heap.fi=0)
		// Failed to show the following sub-obligations:
		// !(select(anon(store(store(store(store(store(heap, this.ffb, heap.ffb), this.fint, -670), this.fi, NEW13_0), this.fi, NEW13_0), this.ff, fut_34)), this.fi)=0)	
			}
		}
	}
}

{
	Ce x = new CeFrame();
	x.ce();
}
