module Counterexample;
interface Ce { Unit ce(); }

class CeFrame implements Ce {
	String ffb = "fut_?(0)";
	String fj = null;
	String fi = null;
	Int fint = 0;
	Bool fb = False;

	Unit ce() {
		// Snippet from: unknown
		// while((this.fb || False)){} 
		// Known true:
		// Negated loop guard: !((this.fb || False))
		// Loop invariant: true
		
		// Assume the following pre-state:
		this.ffb = "fut_?(7)";
		this.fj = "object_?(7)";
		this.fi = "object_?(7)";
		this.fint = 7;
		this.fb = True;
		// End of setup
		
		String dataNode = this.fi;
		// I tree = new D();
		String tree = "object_1";
		
		// await this.ff?;
		// Assume the following assignments while blocked:
		this.ffb = "fut_?(10)";
		this.fj = "object_?(10)";
		this.fi = null;
		this.fint = 11797;
		this.fb = True;
		// End assignments
		
		// Bool sendFlag = (this.ffb).get;
		Bool sendFlag = False;
		}
		this.fb = False;
		Bool isSave = False;
		// this.fj = new E();
		this.fj = "object_2";
		this.fi = this.fi;
		// this.ffb = this.fi!b();
		this.ffb = "fut_568";
		this.fint = (136 * this.fint);
		this.fint = this.fint;
		
		// Proof failed here. Trying to show:
		// Null-check: !(heap.fi=0)
		// Failed to show the following sub-obligations:
		// !(select(store(heap, this.fi, select(anon(heap), this.fi)), this.fi)=0)
	}
}

{
	Ce x = new CeFrame();
	x.ce();
}
