module Counterexample;
interface Ce { Unit ce(); }

class CeFrame implements Ce {
	Int fint = 0;
	String fi = null;
	Bool fb = False;
	String fj = null;
	String ff = "fut_?(0)";

	Unit ce() {
		// Snippet from: unknown
		// while(this.fb){} 
		// Known true:
		// Negated loop guard: !(this.fb)
		// Loop invariant: true
		
		// Assume the following pre-state:
		this.fint = 7;
		this.fi = "object_?(7)";
		this.fb = True;
		this.fj = "object_?(7)";
		this.ff = "fut_?(7)";
		// End of setup
		
		
		// await this.ff?;
		// Assume the following assignments while blocked:
		this.fint = 9;
		this.fi = null;
		this.fb = True;
		this.fj = "object_?(9)";
		this.ff = "fut_?(9)";
		// End assignments
		
		// this.fint = (this.ff).get;
		this.fint = 0;
		if(False){}
		else{
		
		}
		Int systemAmount = ((610 + -stackCounter) + 488);
		}
		this.fint = 539;
		this.fj = this.fj;
		this.fb = (this.fb || False);
		// J packet = new E();
		String packet = "object_1";
		
		// Proof failed here. Trying to show:
		// Null-check: !(heap.fi=0)
		// Failed to show the following sub-obligations:
		// !(select(anon(heap), this.fi)=0)
	}
}

{
	Ce x = new CeFrame();
	x.ce();
}
