module Counterexample;
interface Ce { Unit ce(); }

class CeFrame implements Ce {
	String ffb = "fut_40";
	String fj = null;
	String ff = "fut_40";
	Int fint = 0;
	String fi = null;
	Bool fb = False;

	Unit ce() {
		// Snippet from: unknown
		// while((-2646 == this.fint)){} 
		// Known true:
		// Negated loop guard: !((-2646 == this.fint))
		// Loop invariant: true
		
		// Assume the following pre-state:
		Bool isDone = True;
		this.ffb = "fut_?(11)";
		this.fj = "object_?(11)";
		this.ff = "fut_?(18)";
		this.fint = 12;
		this.fi = "object_?(11)";
		this.fb = True;
		// End of setup
		
		// this.fj = new E();
		this.fj = "object_1";
		Bool restoreFlag = ((hasDone || True) || !False);
		if(False){}
		else{
			this.fi = this.fi;
			if(this.fb){
				Bool hasDone = ((!True && (-778 == 215)) && isDone);
				// this.ffb = this.fi!b();
				this.ffb = "fut_36";
				Int listCounter = systemAmount;
				// this.fj = new E();
				this.fj = "object_2";
				String flushUpdates = this.ffb;
				Int processCount = 404;
			}
			// this.ffb = this.fi!b();
			this.ffb = "fut_37";
			Bool systemOverride = systemOverride;
			systemOverride = (isDone || False);
			if((False && True)){}
			else{
				if(systemOverride){}
				else{
					// this.fint = (this.ff).get;
					this.fint = 15;
				}
				this.fb = !False;
			}
			Int l = 467;
			// this.ffb = this.fi!b();
			this.ffb = "fut_40";
		}
		restoreFlag = hasDone;
		this.fi = this.fi;
		restoreFlag = (this.ff == this.ff);
		this.ff = this.ff;
		String packetUnit = tree;
		println(toString(((814 * this.fint) * -889))); // return statement
		// Evaluates to: -10854690
		// Proof failed here. Trying to show:
		// Method postcondition: (result=0)
		// Object invariant: true
		// Failed to show the following sub-obligations:
		// (((814*select(store(heap, this.fint, valueOf(heap.ff)), this.fint))*-889)=0)
	}
}

{
	Ce x = new CeFrame();
	x.ce();
}
