module Counterexample;
interface Ce { Unit ce(); }

class CeFrame implements Ce {
	String fj = null;
	Int fint = 0;
	String fi = null;
	Bool fb = False;
	String ffb = "fut_?(0)";

	Unit ce() {
		// Snippet from: unknown
		// while((-2646 == this.fint)){} 
		// Known true:
		// Negated loop guard: !((-2646 == this.fint))
		// Loop invariant: true
		
		// Assume the following pre-state:
		Bool isDone = True;
		this.fj = "object_?(7)";
		this.fint = 8;
		this.fi = "object_?(7)";
		this.fb = True;
		this.ffb = "fut_?(7)";
		// End of setup
		
		// this.fj = new E();
		this.fj = "object_1";
		Bool restoreFlag = ((hasDone || True) || !False);
		if(False){}
		else{
			this.fi = this.fi;
			if(this.fb){}
			else{
				this.fb = True;
			}
			// this.ffb = this.fi!b();
			this.ffb = "fut_57";
			Bool systemOverride = systemOverride;
			systemOverride = (isDone || False);
			if((False && True)){}
			else{
				if(systemOverride){
					Bool isWrite = True;
					
					// await this.ffb?;
					// Assume the following assignments while blocked:
					this.fj = "object_?(12)";
					this.fint = 12;
					this.fi = "object_?(12)";
					this.fb = True;
					this.ffb = "fut_?(15)";
					// End assignments
					
					this.fj = this.fj;
					Bool execOverride = (systemAmount <= 89);
					// this.fj = new E();
					this.fj = "object_2";
					
					// await this.ff?;
					// Assume the following assignments while blocked:
					this.fj = "object_?(13)";
					this.fint = 13;
					this.fi = null;
					this.fb = True;
					this.ffb = "fut_?(13)";
					// End assignments
					
					Int queueDepth = (664 * systemAmount);
				}
				this.fb = !False;
			}
			Int l = 467;
		
		// Proof failed here. Trying to show:
		// Null-check: !(heap.fi=0)
		// Failed to show the following sub-obligations:
		// !(select(anon(store(store(store(anon(store(store(store(store(store(heap, this.fj, NEW23_0), this.fj, NEW23_0), this.fi, heap.fi), this.fb, 1), this.ffb, fut_57)), this.fj, select(anon(store(store(store(store(store(heap, this.fj, NEW23_0), this.fj, NEW23_0), this.fi, heap.fi), this.fb, 1), this.ffb, fut_57)), this.fj)), this.fj, NEW26_0), this.fj, NEW26_0)), this.fi)=0)
		}
	}
}

{
	Ce x = new CeFrame();
	x.ce();
}
