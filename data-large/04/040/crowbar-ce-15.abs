module Counterexample;
interface Ce { Unit ce(); }

class CeFrame implements Ce {
	Int fint = 0;
	String fi = null;
	Bool fb = False;
	String ff = "fut_?(0)";
	String ffb = "fut_?(0)";

	Unit ce() {
		// Snippet from: unknown
		// Assume the following pre-state:
		Bool willLoad = True;
		this.fint = 6;
		this.fb = True;
		this.ff = "fut_80";
		// End of setup
		
		// Known true:
		// Loop guard: True
		// Loop invariant: true
		// while(True) {
		{
			if(willLoad){
				// this.ff = this.fi!n();
				this.ff = "fut_80";
				if(True){
					Int queueCount = arg;
					this.fb = False;
					this.fb = True;
					// Bool sendToggle = (this.ffb).get;
					// Future value irrelevant or unavailable, using default:
					Bool sendToggle = False;
					// willLoad = (this.ffb).get;
					// Future value irrelevant or unavailable, using default:
					willLoad = False;
					// Fut resolveState = this.fi!b();
					String resolveState = "fut_81";
					this.fint = 749;
					// willLoad = (resolveState).get;
					// Future value irrelevant or unavailable, using default:
					willLoad = False;
		
		// Proof failed here. Trying to show:
		// Null-check: !(heap.fi=0)
		// Failed to show the following sub-obligations:
		// !(heap.fi=0)		
				}	
			}
		}
	}
}

{
	Ce x = new CeFrame();
	x.ce();
}
