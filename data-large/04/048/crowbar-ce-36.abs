module Counterexample;
interface Ce { Unit ce(); }

class CeFrame implements Ce {
	Int fint = 0;
	String fi = null;
	Bool fb = False;
	String ffb = "fut_?(0)";

	Unit ce() {
		// Snippet from: unknown
		// while((543 == (this.fint + this.fint))){} 
		// Known true:
		// Negated loop guard: !((543 == (this.fint + this.fint)))
		// Loop invariant: true
		
		// Assume the following pre-state:
		this.fint = 5;
		this.fi = "object_?(5)";
		this.fb = True;
		this.ffb = "fut_?(5)";
		// End of setup
		
		this.fb = !True;
		}
		if(False){}
		else{
			
			// await this.ffb?;
			// Assume the following assignments while blocked:
			this.fint = 6;
			this.fi = null;
			this.fb = True;
			this.ffb = "fut_?(6)";
			// End assignments
			
		}
		// this.ffb = this.fi!b();
		this.ffb = "fut_127";
		
		// Proof failed here. Trying to show:
		// Null-check: !(heap.fi=0)
		// Failed to show the following sub-obligations:
		// !(select(anon(store(heap, this.fb, !(1))), this.fi)=0)
	}
}

{
	Ce x = new CeFrame();
	x.ce();
}
