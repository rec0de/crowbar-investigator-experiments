module MockABS;

data Spec = Ensures(Bool) | Requires(Bool);

// Static base definitions
interface I { Int n(); Bool b(); }
interface J { Unit m(Int v); I getI(Bool flag, Int c); }
class D implements I { Int n() { return 0; } Bool b() { return False; } }
class E implements J { Unit m(Int v) { } I getI(Bool flag, Int c) { I res = new D(); return res; } }

class Generated {
Int fint = 0;
Bool fb = True;
Fut<Int> ff;
Fut<Bool> ffb;
I fi = null;
J fj = null;

[Spec : Ensures(result == 0)]
Int gen() {
this.fint = 27;
I clientUnit = this.fi;
if(! True) {
	Bool isSaveed =(False ||! False && True);
	
}
else {
	J ioStruct = this.fj;
	this.fint = this.fint - 105;
	this.ff = this.ff;
	Fut<Int> syncChanges = this.ff;
	while( - 527 + - this.fint * 134 > - 78 * this.fint + - this.fint) {
		await this.ff?;
		this.fi = this.fi;
		this.fi = new D();
		Bool hasLoaded = this.ffb.get;
		Int systemCounter = 437 * 447;
		this.fint = 644 * - 695 * this.fint;
		this.ffb = this.fi!b();
		while(! hasLoaded) {
			await this.ff?;
			
		}
		clientUnit = new D();
		Bool isDone = True;
		this.fj = new E();
		
	}
	Bool hasLoaded = this.fb;
	await syncChanges?;
	
}
return - 843;
}
}
{}