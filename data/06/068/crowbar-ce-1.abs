module Counterexample;
interface Ce { Unit ce(); }

class CeFrame implements Ce {
	String ff = "fut_?(7)";
	String fi = "object_?(7)";
	Int fint = 7;
	Bool fb = True;
	String ffb = "fut_?(7)";

	Unit ce() {
		
		
		// this.fi = new D();
		this.fi = "object_1";
		Bool canSave = ((-387192 * this.fint) > 472);
		if(True){
			this.ff = this.ff;
		}
		Int processCounter = 810;
		// this.ffb = this.fi!b();
		this.ffb = "fut_10";
		Int queueAmount = processCounter;
		// this.ff = this.fi!n();
		this.ff = "fut_11";
		this.fi = this.fi;
		queueAmount = 257;
		if(((((False && this.fb) && True) && True) && True)){}
		else{
			processCounter = (queueAmount * -183);
			this.fint = 962;
			this.fi = this.fi;
			
			// await (250608 == (this.fint - 985));
			// Assume the following assignments while blocked:
			this.ff = "fut_?(10)";
			this.fi = "object_?(10)";
			this.fint = 251593;
			this.fb = True;
			this.ffb = "fut_?(10)";
			// End assignments
			
			this.fi = this.fi;
		}
		println(toString(1301)); // return statement
		// Evaluates to: 1301
		// Proof failed here. Trying to show:
		// Method postcondition: result=0
		// Object invariant: true
		// Failed to show the following sub-obligations:
		// 1301=0
	}
}

{
	Ce x = new CeFrame();
	x.ce();
}
