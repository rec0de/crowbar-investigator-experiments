module MockABS;

data Spec = Ensures(Bool) | Requires(Bool);

// Static base definitions
interface I { Int n(); Bool b(); }
interface J { Unit m(Int v); I getI(Bool flag, Int c); }
class D implements I { Int n() { return 0; } Bool b() { return False; } }
class E implements J { Unit m(Int v) { } I getI(Bool flag, Int c) { I res = new D(); return res; } }

class Generated {
Int fint = 0;
Bool fb = True;
Fut<Int> ff;
Fut<Bool> ffb;
I fi = null;
J fj = null;

[Spec : Ensures(result == 0)]
Int gen() {
this.fi = this.fi;
this.ff = this.ff;
J clientStruct = this.fj;
J ioUnit = clientStruct;
I ioRepresentation = new D();
this.fint =(this.fint);
Int j = 255 * 983;
clientStruct = clientStruct;
if( this.fb) {
	this.fb = 333 * this.fint * -(- 605 + 662) == 507 + 402;
	Int k = this.fint * j -(211 * 969) * 880 * 363 - 858;
	
}
else {
	this.fj = new E();
	
}
this.fj = clientStruct;
return - j;
}
}
{}