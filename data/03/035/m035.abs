module MockABS;

data Spec = Ensures(Bool) | Requires(Bool);

// Static base definitions
interface I { Int n(); Bool b(); }
interface J { Unit m(Int v); I getI(Bool flag, Int c); }
class D implements I { Int n() { return 0; } Bool b() { return False; } }
class E implements J { Unit m(Int v) { } I getI(Bool flag, Int c) { I res = new D(); return res; } }

class Generated {
Int fint = 0;
Bool fb = True;
Fut<Int> ff;
Fut<Bool> ffb;
I fi = null;
J fj = null;

[Spec : Ensures(result == 0)]
Int gen() {
this.ff = this.fi!n();
this.fint = 411 *(519) * 225;
this.fb = True;
this.ffb = this.ffb;
if( this.fb) {
	this.ffb = this.fi!b();
	this.fint = - 325;
	await this.ffb?;
	this.fint = 854;
	this.fj = new E();
	this.fj = this.fj;
	this.fj = new E();
	this.ff = this.ff;
	J packetUnit = this.fj;
	packetUnit = packetUnit;
	this.ff = this.ff;
	if( this.fb) {
		this.ffb = this.fi!b();
		this.ff =(this.fi )!n();
		packetUnit = new E();
		while( True) {
			this.ffb = this.fi!b();
			I node = new D();
			
		}
		this.fj = packetUnit;
		
	}
	else {
		this.ffb =(this.ffb);
		this.fj = new E();
		Bool willExec = this.fint == this.fint;
		this.fb = willExec;
		if(! False ||! True || willExec == True) {
			this.fint = - 558;
			
		}
		else {
			willExec = False;
			
		}
		I message = new D();
		willExec = this.ffb.get;
		this.fb = this.ff == this.ff;
		this.fb = True;
		Bool readToggle = willExec &&! True &&! False;
		
	}
	this.fint = 445;
	this.fb = False &&! True;
	this.fint = this.fint * - this.fint * this.fint + 380;
	
}
else {
	this.fi = this.fi;
	
}
Fut<Bool> syncUpdates = this.fi!b();
while( False) {
	syncUpdates = this.fi!b();
	Bool configToggle = 324 - 938 >= this.fint + this.fint;
	if( True) {
		this.fj =(this.fj);
		if((configToggle) &&(True) && this.fb ||! this.fb) {
			this.fb = False ||! True;
			
		}
		
	}
	else {
		configToggle = this.fb;
		while(! True && False) {
			this.fj = this.fj;
			this.fint = this.fint;
			this.fb = 693 <= this.fint - this.fint;
			this.ffb = this.fi!b();
			
		}
		syncUpdates =(syncUpdates);
		
	}
	this.ffb = this.ffb;
	Bool isExec = True;
	isExec = - 287 == this.fint;
	Int j = 459;
	
}
if( True) {
	this.fb = this.fb;
	I person = new D();
	while( this.fint <= 675 * 560 - this.fint + this.fint) {
		this.ffb = this.fi!b();
		this.fint = this.fint;
		this.fj = this.fj;
		
	}
	
}
await False || True;
this.ffb = this.ffb;
this.fj = this.fj;
return 2 * 986;
}
}
{}