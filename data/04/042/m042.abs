module MockABS;

data Spec = Ensures(Bool) | Requires(Bool);

// Static base definitions
interface I { Int n(); Bool b(); }
interface J { Unit m(Int v); I getI(Bool flag, Int c); }
class D implements I { Int n() { return 0; } Bool b() { return False; } }
class E implements J { Unit m(Int v) { } I getI(Bool flag, Int c) { I res = new D(); return res; } }

class Generated {
Int fint = 0;
Bool fb = True;
Fut<Int> ff;
Fut<Bool> ffb;
I fi = null;
J fj = null;

[Spec : Ensures(result == 0)]
Int gen() {
this.fj = this.fj;
this.fi = new D();
while( - 402 == this.fint - 468 - 994 - - 82) {
	this.ffb = this.ffb;
	this.fint = this.fint;
	this.fi = new D();
	this.fb = True && True;
	this.ff = this.fi!n();
	this.ffb = this.fi!b();
	this.ffb = this.fi!b();
	Fut<Bool> resetUpdates = this.fi!b();
	this.fint = 546;
	Bool willLoad = resetUpdates ==(this.ffb);
	this.fb = this.fb == False;
	
}
await this.ffb?;
this.fi = new D();
return this.fint * 721 * this.fint;
}
}
{}