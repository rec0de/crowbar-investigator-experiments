module MockABS;

data Spec = Ensures(Bool) | Requires(Bool);

// Static base definitions
interface I { Int n(); Bool b(); }
interface J { Unit m(Int v); I getI(Bool flag, Int c); }
class D implements I { Int n() { return 0; } Bool b() { return False; } }
class E implements J { Unit m(Int v) { } I getI(Bool flag, Int c) { I res = new D(); return res; } }

class Generated {
Int fint = 0;
Bool fb = True;
Fut<Int> ff;
Fut<Bool> ffb;
I fi = null;
J fj = null;

[Spec : Ensures(result == 0)]
Int gen() {
this.fint = 909 + 457 + this.fint * this.fint;
this.fint = 847 + this.fint * 359;
this.fb = True && this.fb;
this.fb =((- 922 - this.fint >= 426)) &&! True;
this.fi = new D();
while(! False ||(! False)) {
	this.fi = new D();
	
}
this.fint = - 642 * 32;
this.fb = 509 + 67 * this.fint * 508 * 966 == 554;
this.fb = True;
return(- 506 - this.fint - 189) * - this.fint + 917 - 336;
}
}
{}