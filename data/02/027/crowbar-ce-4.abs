module Counterexample;
interface Ce { Unit ce(); }

class CeFrame implements Ce {
	Int fint = 3;
	String ffb = "fut_?(3)";
	String fi = null;
	String fj = null;
	String ff = "fut_?(0)";
	Bool fb = False;

	Unit ce() {
		
		while(False){} 
		// Known true:
		// Negated loop guard: !(False)
		// Loop invariant: true
		
		// Bool hasSaveed = (this.ffb).get;
		Bool hasSaveed = False;
		this.fint = -835;
		// this.ffb = this.fi!b();
		this.ffb = "fut_6";
		if(((--this.fint * -864) >= this.fint)){
			// this.fi = new D();
			this.fi = "object_1";
			String node = this.fj;
		}
		Int stackCount = -625;
		// this.ff = this.fi!n();
		this.ff = "fut_7";
		this.fb = (this.fb || hasSaveed);
		stackCount = (680 * this.fint);
		Bool configToggle = ((-stackCount * 906) == 702208);
		this.fb = False;
		
		// await this.ff?;
		// No heap modification info available at this point
		
		
		// await True;
		// No heap modification info available at this point
		
		// this.ff = this.fi!n();
		this.ff = "fut_8";
		hasSaveed = True;
		Bool isLoaded = configToggle;
		configToggle = (True || False);
		Bool isWrite = True;
		stackCount = -105462;
		// J serverNode = new E();
		String serverNode = "object_2";
		this.fint = 697;
		configToggle = hasSaveed;
		println(toString(-961)); // return statement
		// Evaluates to: -961
		// Proof failed here. Trying to show:
		// Method postcondition: result=0
		// Object invariant: true
		// Failed to show the following sub-obligations:
		// -961=0
	}
}

{
	Ce x = new CeFrame();
	x.ce();
}
