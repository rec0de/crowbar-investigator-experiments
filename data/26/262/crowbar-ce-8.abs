module Counterexample;
interface Ce { Unit ce(); }

class CeFrame implements Ce {
	Int fint = -1;
	String ffb = "fut_22";
	String fi = null;

	Unit ce() {
		
		while(False){} 
		// Known true:
		// Negated loop guard: !(False)
		// Loop invariant: true
		
		Bool isLoaded = (((False && False) && !True) || isLoaded);
		Bool writeToggle = ((-arg + (584 * arg)) == -421);
		}
		// this.ffb = this.fi!b();
		this.ffb = "fut_22";
		Int arg = -this.fint;
		
		// await this.ff?;
		// Assume the following assignments while blocked:
		this.fint = -1;
		this.ffb = "fut_22";
		// End assignments
		
		// I packetNode = new D();
		String packetNode = "object_1";
		if((--7978 <= this.fint)){}
		else{
		
		}
		println(toString((-373 * this.fint))); // return statement
		// Evaluates to: 373
		// Proof failed here. Trying to show:
		// Method postcondition: result=0
		// Object invariant: true
		// Failed to show the following sub-obligations:
		// -373*select(anon(store(heap, this.ffb_f, fut_22)), this.fint_f)=0
	}
}

{
	Ce x = new CeFrame();
	x.ce();
}
