module Counterexample;
interface Ce { Unit ce(); }

class CeFrame implements Ce {
	String fi = "object_?(5)";
	String fj = "object_?(5)";
	String ff = "fut_?(5)";

	Unit ce() {
		
		
		// this.fj = new E();
		this.fj = "object_1";
		// this.fi = new D();
		this.fi = "object_2";
		// this.ff = this.fi!n();
		this.ff = "fut_6";
		// Fut syncChanges = this.fi!b();
		String syncChanges = "fut_7";
		// Int stackAmount = (this.ff).get;
		Int stackAmount = 0;
		// Bool writeFlag = (syncChanges).get;
		// Future value irrelevant or unavailable, using default:
		Bool writeFlag = False;
		
		// await this.ff?;
		// Assume the following assignments while blocked:
		this.fi = null;
		this.fj = "object_?(7)";
		this.ff = "fut_?(7)";
		// End assignments
		
		
		// Proof failed here. Trying to show:
		// Null-check: !select(heap, this.fi_f)=0
		// Failed to show the following sub-obligations:
		// !select(anon(store(store(store(store(store(heap, this.fj_f, NEW0_0), this.fj_f, NEW0_0), this.fi_f, NEW1_0), this.fi_f, NEW1_0), this.ff_f, fut_6)), this.fi_f)=0
	}
}

{
	Ce x = new CeFrame();
	x.ce();
}
