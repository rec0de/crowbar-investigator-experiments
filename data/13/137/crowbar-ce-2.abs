module Counterexample;
interface Ce { Unit ce(); }

class CeFrame implements Ce {
	Int fint = 0;
	String ffb = "fut_?(0)";
	String ff = "fut_?(0)";

	Unit ce() {
		
		while(False){} 
		// Known true:
		// Negated loop guard: !(False)
		// Loop invariant: true
		
		Int processAmount = 117;
		this.fint = -222;
		Int stackCounter = -78062;
		// Bool isDone = (this.ffb).get;
		// Future value irrelevant or unavailable, using default:
		Bool isDone = False;
		}
		String returnData = this.ff;
		// I message = new D();
		String message = "object_1";
		Int arg = this.fint;
		Int value = (32816 * arg);
		Int processAmount = 20;
		// message = new D();
		message = "object_2";
		// Bool configEnabled = (z).get;
		// Future value irrelevant or unavailable, using default:
		Bool configEnabled = False;
		}
		println(toString(779)); // return statement
		// Evaluates to: 779
		// Proof failed here. Trying to show:
		// Method postcondition: result=0
		// Object invariant: true
		// Failed to show the following sub-obligations:
		// 779=0
	}
}

{
	Ce x = new CeFrame();
	x.ce();
}
