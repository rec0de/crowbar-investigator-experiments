module MockABS;

data Spec = Ensures(Bool) | Requires(Bool);

// Static base definitions
interface I { Int n(); Bool b(); }
interface J { Unit m(Int v); I getI(Bool flag, Int c); }
class D implements I { Int n() { return 0; } Bool b() { return False; } }
class E implements J { Unit m(Int v) { } I getI(Bool flag, Int c) { I res = new D(); return res; } }

class Generated {
Int fint = 0;
Bool fb = True;
Fut<Int> ff;
Fut<Bool> ffb;
I fi = null;
J fj = null;

[Spec : Ensures(result == 0)]
Int gen() {
await this.ff?;
this.fint = 320 * - 611;
this.fj = this.fj;
this.fj = this.fj;
await this.ff?;
Bool canExec = - this.fint +(this.fint) - this.fint != 218 - - 423;
this.ffb = this.fi!b();
Int systemDepth = 16 * 286;
while((this.fj == this.fj)) {
	this.ffb = this.fi!b();
	canExec = this.fi ==(this.fi);
	
}
this.fb = True;
this.fi = this.fi;
this.fb = 419 >= 301;
while( False) {
	I packetUnit = this.fi;
	this.fj = new E();
	Bool hasReady = - 540 ==(76 * 982 *(- systemDepth + - 932));
	
}
await this.ff?;
if( systemDepth > this.fint) {
	this.fi = this.fi;
	systemDepth = this.fint;
	if( False &&(this.fb || this.fb )) {
		I node = new D();
		this.fj = this.fj;
		systemDepth = - 55 * - 75;
		
	}
	
}
Int res = systemDepth * 179 * 342;
return(- 466 - - 881 * 615 - 585);
}
}
{}