module MockABS;

data Spec = Ensures(Bool) | Requires(Bool);

// Static base definitions
interface I { Int n(); Bool b(); }
interface J { Unit m(Int v); I getI(Bool flag, Int c); }
class D implements I { Int n() { return 0; } Bool b() { return False; } }
class E implements J { Unit m(Int v) { } I getI(Bool flag, Int c) { I res = new D(); return res; } }

class Generated {
Int fint = 0;
Bool fb = True;
Fut<Int> ff;
Fut<Bool> ffb;
I fi = null;
J fj = null;

[Spec : Ensures(result == 0)]
Int gen() {
Int systemCount = this.fint + 935;
this.fj = this.fj;
this.fj = new E();
this.ff =(this.ff);
this.fb = systemCount * 175 != - 933;
if(! this.fb || True || True) {
	systemCount = systemCount;
	
}
else {
	systemCount = 48 * 548;
	
}
this.ff = this.fi!n();
J message = this.fj;
if( True) {
	this.fb = this.fb;
	while( this.fb) {
		message = new E();
		this.ffb = this.fi!b();
		systemCount = 790 + - systemCount;
		this.fj =(message);
		await this.ff?;
		this.fi = this.fi;
		Bool hasReady = this.fint < 728;
		message = message;
		
	}
	
}
else {
	this.fb = True || True;
	systemCount = this.fint - 276;
	this.fint = 315;
	await this.ff?;
	Bool pauseFlag = 262 - - this.fint * this.fint > 333;
	this.ffb = this.fi!b();
	this.fb = False || True;
	systemCount = - 648;
	message = new E();
	Bool processToggle = 205 > 472;
	this.fint = systemCount * 470;
	this.ffb = this.fi!b();
	J serverUnit = this.fj;
	Fut<Bool> returnInfo = this.ffb;
	this.fint = 681 +(226) * - 458;
	returnInfo = this.fi!b();
	while( False) {
		pauseFlag = this.fi == this.fi;
		pauseFlag = message == this.fj;
		processToggle = - 766 > 399;
		systemCount = 897;
		this.fj = new E();
		J clientUnit =(this.fj);
		I serverStruct = new D();
		while( False) {
			I node = new D();
			
		}
		I person = serverStruct;
		message = new E();
		J tree = serverUnit;
		while( False || False) {
			Int queueCounter = this.fint;
			queueCounter = 923;
			
		}
		
	}
	Bool hasDone = 434 != - systemCount;
	
}
Int arg = this.fint;
while( this.fi == this.fi) {
	this.fi = new D();
	Fut<Int> flushFlag =(this.fi )!n();
	this.fint = - 642 * - systemCount;
	J clientRepresentation = new E();
	await this.ff?;
	flushFlag = this.fi!n();
	this.ff = this.fi!n();
	message = this.fj;
	systemCount = 437;
	
}
await this.ff?;
this.fb = 268 == this.fint;
this.fb =(this.ffb) == this.ffb;
return(405);
}
}
{}