module MockABS;

data Spec = Ensures(Bool) | Requires(Bool);

// Static base definitions
interface I { Int n(); Bool b(); }
interface J { Unit m(Int v); I getI(Bool flag, Int c); }
class D implements I { Int n() { return 0; } Bool b() { return False; } }
class E implements J { Unit m(Int v) { } I getI(Bool flag, Int c) { I res = new D(); return res; } }

class Generated {
Int fint = 0;
Bool fb = True;
Fut<Int> ff;
Fut<Bool> ffb;
I fi = null;
J fj = null;

[Spec : Ensures(result == 0)]
Int gen() {
Int listDepth = -((174)) * this.fint;
Fut<Int> x = this.fi!n();
await!(True);
Fut<Bool> resolveInfo = this.fi!b();
this.fj = this.fj;
x =((this.fi) )!n();
await resolveInfo?;
this.fb = this.fi == this.fi;
this.fint = 625;
J dataObject =(this.fj);
while( True) {
	listDepth = 918;
	
}
resolveInfo =(resolveInfo);
return listDepth;
}
}
{}