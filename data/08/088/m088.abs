module MockABS;

data Spec = Ensures(Bool) | Requires(Bool);

// Static base definitions
interface I { Int n(); Bool b(); }
interface J { Unit m(Int v); I getI(Bool flag, Int c); }
class D implements I { Int n() { return 0; } Bool b() { return False; } }
class E implements J { Unit m(Int v) { } I getI(Bool flag, Int c) { I res = new D(); return res; } }

class Generated {
Int fint = 0;
Bool fb = True;
Fut<Int> ff;
Fut<Bool> ffb;
I fi = null;
J fj = null;

[Spec : Ensures(result == 0)]
Int gen() {
this.fint = 371 * 89;
this.fb = False && True;
if(! True) {
	this.ff = this.fi!n();
	this.ffb =(this.fi )!b();
	this.fint = - this.fint + - 122 * 634 + this.fint;
	this.ff = this.fi!n();
	this.fb = False &&((False ||! True || this.fb)) && this.fb;
	Bool isSave = this.ffb.get;
	this.ffb =(this.fi )!b();
	isSave = isSave &&! False;
	if( True) {
		await this.ff?;
		await this.ffb?;
		Bool canWrite =(False) ||! False &&! True &&!(True);
		
	}
	else {
		Int stackAmount =(394);
		this.ff =(this.ff);
		while( - stackAmount >= - 75) {
			this.fj = new E();
			this.fj = new E();
			await this.ffb?;
			this.fi = new D();
			await False;
			this.fb = this.ffb.get;
			
		}
		stackAmount = - 202;
		stackAmount = stackAmount;
		this.fint = this.ff.get;
		
	}
	this.fint =(58);
	this.fj = this.fj;
	Int j = 648;
	if( 330 ==(- this.fint) - 149) {
		this.fj = new E();
		
	}
	this.fj = this.fj;
	isSave =! False == True || True || False ||(True) && this.fb ||! False;
	this.fb = j + - 840 * 520 <= 259;
	Int res = 351;
	this.fint = 30 * this.fint - res * 706;
	Fut<Bool> resultState = this.fi!b();
	
}
while(! False) {
	await this.ffb?;
	this.fi = new D();
	this.fj = new E();
	await this.ffb?;
	
}
return 799;
}
}
{}