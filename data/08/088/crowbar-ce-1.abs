module Counterexample;
interface Ce { Unit ce(); }

class CeFrame implements Ce {
	Int fint = 6;
	String fi = null;
	Bool fb = True;
	String fj = "object_?(6)";
	String ff = "fut_?(6)";

	Unit ce() {
		// Assume the following pre-state:
		Int stackAmount = 76;
		// End of setup
		
		while((-stackAmount >= -75)){} 
		// Known true:
		// Negated loop guard: !((-stackAmount >= -75))
		// Loop invariant: true
		
		stackAmount = -202;
		stackAmount = stackAmount;
		// this.fint = (this.ff).get;
		this.fint = 0;
		}
		this.fint = 58;
		this.fj = this.fj;
		Int j = 648;
		if((330 == (-this.fint - 149))){}
		else{
		
		}
		this.fj = this.fj;
		Bool isSave = (((((!False == True) || True) || False) || (True && this.fb)) || !False);
		this.fb = ((j + -436800) <= 259);
		Int res = 351;
		this.fint = ((30 * this.fint) - (res * 706));
		
		// Proof failed here. Trying to show:
		// Null-check: !select(heap, this.fi_f)=0
		// Failed to show the following sub-obligations:
		// !select(store(store(store(store(store(store(heap, this.fint_f, valueOf(select(heap, this.ff_f))), this.fint_f, 58), this.fj_f, select(store(store(heap, this.fint_f, valueOf(select(heap, this.ff_f))), this.fint_f, 58), this.fj_f)), this.fj_f, select(store(store(store(heap, this.fint_f, valueOf(select(heap, this.ff_f))), this.fint_f, 58), this.fj_f, select(store(store(heap, this.fint_f, valueOf(select(heap, this.ff_f))), this.fint_f, 58), this.fj_f)), this.fj_f)), this.fb_f, 648+-436800<=259), this.fint_f, 30*select(store(store(store(store(store(heap, this.fint_f, valueOf(select(heap, this.ff_f))), this.fint_f, 58), this.fj_f, select(store(store(heap, this.fint_f, valueOf(select(heap, this.ff_f))), this.fint_f, 58), this.fj_f)), this.fj_f, select(store(store(store(heap, this.fint_f, valueOf(select(heap, this.ff_f))), this.fint_f, 58), this.fj_f, select(store(store(heap, this.fint_f, valueOf(select(heap, this.ff_f))), this.fint_f, 58), this.fj_f)), this.fj_f)), this.fb_f, 648+-436800<=259), this.fint_f)-351*706), this.fi_f)=0
	}
}

{
	Ce x = new CeFrame();
	x.ce();
}
