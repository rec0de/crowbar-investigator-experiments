module Counterexample;
interface Ce { Unit ce(); }

class CeFrame implements Ce {
	String fj = null;
	Bool fb = False;
	String ffb = "fut_9";
	String ff = "fut_9";
	String fi = null;
	Int fint = 0;

	Unit ce() {
		
		
		// Fut syncReload = this.fi!b();
		String syncReload = "fut_8";
		// this.ff = this.fi!n();
		this.ff = "fut_9";
		this.fb = !this.fb;
		this.fb = ((True && this.fb) || this.fb);
		Int stackAmount = 956;
		// this.fj = new E();
		this.fj = "object_1";
		// this.ffb = this.fi!b();
		this.ffb = "fut_10";
		this.fb = !True;
		syncReload = this.ffb;
		if((((((this.fb && !this.fb) && !False) || True) || (False && False)) && False)){}
		else{
			String tree = this.fj;
		}
		// syncReload = this.fi!b();
		syncReload = "fut_17";
		this.fj = this.fj;
		
		// await this.ff?;
		// Assume the following assignments while blocked:
		this.fj = null;
		this.fb = False;
		this.ffb = "fut_9";
		this.ff = "fut_9";
		// End assignments
		
		this.fint = 39208;
		println(toString(((-stackAmount * 819) * stackAmount))); // return statement
		// Evaluates to: -748513584
		// Proof failed here. Trying to show:
		// Method postcondition: result=0
		// Object invariant: true
		// Failed to show the following sub-obligations:
		// -(956)*819*956=0
	}
}

{
	Ce x = new CeFrame();
	x.ce();
}
