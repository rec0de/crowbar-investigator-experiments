module MockABS;

data Spec = Ensures(Bool) | Requires(Bool);

// Static base definitions
interface I { Int n(); Bool b(); }
interface J { Unit m(Int v); I getI(Bool flag, Int c); }
class D implements I { Int n() { return 0; } Bool b() { return False; } }
class E implements J { Unit m(Int v) { } I getI(Bool flag, Int c) { I res = new D(); return res; } }

class Generated {
Int fint = 0;
Bool fb = True;
Fut<Int> ff;
Fut<Bool> ffb;
I fi = null;
J fj = null;

[Spec : Ensures(result == 0)]
Int gen() {
this.ff = this.fi!n();
while( this.fint ==(835 * 720 * 724) + 848) {
	this.ff = this.fi!n();
	Bool isDone = True;
	await this.ff?;
	Int value = 74;
	Fut<Bool> resultData = this.fi!b();
	
}
this.fint = 584;
if( False &&! this.fb) {
	this.fint = this.fint;
	
}
else {
	this.ff = this.fi!n();
	this.ff = this.fi!n();
	this.fi = this.fi;
	if(! this.fb) {
		this.ffb = this.fi!b();
		this.fb = this.ffb.get;
		
	}
	else {
		Fut<Bool> flushCall = this.ffb;
		Bool isSaveed = this.ff == this.ff;
		this.fj = this.fj;
		
	}
	await this.ffb?;
	this.fi =((this.fi));
	while( True && False && True &&! True) {
		this.fb = False || False && True;
		this.fb = True;
		this.fi = new D();
		this.ff = this.fi!n();
		this.fi = new D();
		this.ffb = this.ffb;
		this.fb = this.ffb.get;
		this.fint = -(-(785 * 458) * this.fint * 863 + - 763) * 517;
		this.fi = this.fi;
		
	}
	J packetObject = new E();
	Fut<Int> resolveData = this.fi!n();
	Bool isReady =(! this.fb == True);
	packetObject = packetObject;
	this.fj = new E();
	isReady = True;
	this.ffb = this.fi!b();
	while( this.fint * 757 + 847 + this.fint <= 355) {
		if( False) {
			this.fint = -(241);
			this.ffb = this.fi!b();
			isReady = False;
			this.fj = new E();
			this.ff = this.fi!n();
			
		}
		else {
			resolveData = this.fi!n();
			this.ff = this.fi!n();
			Bool hasReady = isReady &&! this.fb;
			this.fb =! hasReady && False && False;
			await this.ff?;
			await resolveData?;
			Fut<Bool> p = this.ffb;
			
		}
		
	}
	
}
return 260;
}
}
{}