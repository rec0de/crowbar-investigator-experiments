module Counterexample;
interface Ce { Unit ce(); }

class CeFrame implements Ce {
	String ffb = "fut_?(0)";
	Bool fb = False;
	String fj = null;

	Unit ce() {
		
		while((True && !True)){} 
		// Known true:
		// Negated loop guard: !((True && !True))
		// Loop invariant: true
		
		this.ffb = this.ffb;
		Bool isReady = (True && this.fb);
		if(False){}
		else{
			
			// await this.ff?;
			// No heap modification info available at this point
			
			// this.fj = new E();
			this.fj = "object_1";
			String packetStruct = this.fj;
			isReady = (!False || isReady);
			Int listCount = 97;
			Bool canRead = !this.fb;
			Bool hasReady = (!isReady || False);
			isReady = (this.fj == this.fj);
		}
		isReady = False;
		println(toString(-33666041304)); // return statement
		// Evaluates to: 693697064
		// Proof failed here. Trying to show:
		// Method postcondition: result=0
		// Object invariant: true
		// Failed to show the following sub-obligations:
		// -33666041304=0
	}
}

{
	Ce x = new CeFrame();
	x.ce();
}
