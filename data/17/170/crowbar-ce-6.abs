module Counterexample;
interface Ce { Unit ce(); }

class CeFrame implements Ce {
	Int fint = 2;
	Bool fb = True;
	String ffb = "fut_23";
	String fi = null;

	Unit ce() {
		
		while((this.fb && False)){} 
		// Known true:
		// Negated loop guard: !((this.fb && False))
		// Loop invariant: true
		
		Bool processFlag = False;
		// this.ffb = this.fi!b();
		this.ffb = "fut_23";
		
		// await this.ffb?;
		// Assume the following assignments while blocked:
		this.fint = 4;
		this.fb = True;
		this.ffb = "fut_?(4)";
		// End assignments
		
		println(toString((this.fint + 637))); // return statement
		// Evaluates to: 641
		// Proof failed here. Trying to show:
		// Method postcondition: result=0
		// Object invariant: true
		// Failed to show the following sub-obligations:
		// select(anon(store(heap, this.ffb_f, fut_23)), this.fint_f)+637=0
	}
}

{
	Ce x = new CeFrame();
	x.ce();
}
