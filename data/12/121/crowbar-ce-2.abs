module Counterexample;
interface Ce { Unit ce(); }

class CeFrame implements Ce {
	Int fint = 5;
	Bool fb = True;
	String fi = null;

	Unit ce() {
		
		
		Bool processEnabled = (True && True);
		
		// await this.ffb?;
		// Assume the following assignments while blocked:
		this.fint = 6;
		this.fb = True;
		// End assignments
		
		Bool willExec = (((((((False == True) && True) && True) && !this.fb) && True) || True) || True);
		// Fut resInfo = this.fi!b();
		String resInfo = "fut_2";
		// Fut returnInfo = this.fi!b();
		String returnInfo = "fut_3";
		
		// await ((this.fb || True) || True);
		// Assume the following assignments while blocked:
		this.fint = 3;
		this.fb = True;
		// End assignments
		
		returnInfo = returnInfo;
		println(toString((this.fint - -this.fint))); // return statement
		// Evaluates to: 6
		// Proof failed here. Trying to show:
		// Method postcondition: result=0
		// Object invariant: true
		// Failed to show the following sub-obligations:
		// select(anon(anon(heap)), this.fint_f)--(select(anon(anon(heap)), this.fint_f))=0
	}
}

{
	Ce x = new CeFrame();
	x.ce();
}
