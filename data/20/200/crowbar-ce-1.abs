module Counterexample;
interface Ce { Unit ce(); }

class CeFrame implements Ce {
	Int fint = 1183;
	String fi = "object_?(5)";
	Bool fb = True;
	String fj = "object_?(5)";

	Unit ce() {
		
		// Known true:
		// Loop guard: (-54 < this.fint)
		// Loop invariant: true
		// while((-54 < this.fint)) {
		{
			
			// await this.ff?;
			// Assume the following assignments while blocked:
			this.fint = 6;
			this.fi = null;
			this.fb = True;
			this.fj = "object_?(6)";
			// End assignments
			
			if((this.fb || True)){
				this.fi = this.fi;
				if(!this.fb){
					this.fi = this.fi;
					this.fint = 47;
					this.fj = this.fj;
		
		// Proof failed here. Trying to show:
		// Null-check: !select(heap, this.fi_f)=0
		// Failed to show the following sub-obligations:
		// !select(store(store(store(store(anon(heap), this.fi_f, select(anon(heap), this.fi_f)), this.fi_f, select(store(anon(heap), this.fi_f, select(anon(heap), this.fi_f)), this.fi_f)), this.fint_f, 47), this.fj_f, select(store(store(store(anon(heap), this.fi_f, select(anon(heap), this.fi_f)), this.fi_f, select(store(anon(heap), this.fi_f, select(anon(heap), this.fi_f)), this.fi_f)), this.fint_f, 47), this.fj_f)), this.fi_f)=0		
				}	
			}
		}
	}
}

{
	Ce x = new CeFrame();
	x.ce();
}
