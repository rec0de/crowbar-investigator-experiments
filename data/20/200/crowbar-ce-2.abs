module Counterexample;
interface Ce { Unit ce(); }

class CeFrame implements Ce {
	String fj = "object_?(7)";
	String ff = "fut_?(7)";
	Int fint = 46;
	String fi = "object_?(7)";
	Bool fb = True;
	String ffb = "fut_?(7)";

	Unit ce() {
		
		// Known true:
		// Loop guard: (-54 < this.fint)
		// Loop invariant: true
		// while((-54 < this.fint)) {
		{
			
			// await this.ff?;
			// Assume the following assignments while blocked:
			this.fj = "object_?(8)";
			this.ff = "fut_?(8)";
			this.fint = 8;
			this.fi = "object_?(8)";
			this.fb = True;
			this.ffb = "fut_?(8)";
			// End assignments
			
			if((this.fb || True)){
				this.fi = this.fi;
				if(!this.fb){
					this.fi = this.fi;
					this.fint = 47;
					this.fj = this.fj;
					// this.ff = this.fi!n();
					this.ff = "fut_20";
					
					// await this.ff?;
					// Assume the following assignments while blocked:
					this.fj = "object_?(12)";
					this.ff = "fut_?(12)";
					this.fint = 12;
					this.fi = null;
					this.fb = True;
					this.ffb = "fut_?(12)";
					// End assignments
					
					// Int res = (this.ff).get;
					Int res = 0;
					this.fb = True;
					// J dataObject = new E();
					String dataObject = "object_1";
					this.ffb = this.ffb;
					// this.fj = new E();
					this.fj = "object_2";
					this.fj = this.fj;
				}
		
		// Proof failed here. Trying to show:
		// Null-check: !select(heap, this.fi_f)=0
		// Failed to show the following sub-obligations:
		// !select(store(store(store(store(store(anon(store(store(store(store(store(anon(heap), this.fi_f, select(anon(heap), this.fi_f)), this.fi_f, select(store(anon(heap), this.fi_f, select(anon(heap), this.fi_f)), this.fi_f)), this.fint_f, 47), this.fj_f, select(store(store(store(anon(heap), this.fi_f, select(anon(heap), this.fi_f)), this.fi_f, select(store(anon(heap), this.fi_f, select(anon(heap), this.fi_f)), this.fi_f)), this.fint_f, 47), this.fj_f)), this.ff_f, fut_20)), this.fb_f, 1), this.ffb_f, select(store(anon(store(store(store(store(store(anon(heap), this.fi_f, select(anon(heap), this.fi_f)), this.fi_f, select(store(anon(heap), this.fi_f, select(anon(heap), this.fi_f)), this.fi_f)), this.fint_f, 47), this.fj_f, select(store(store(store(anon(heap), this.fi_f, select(anon(heap), this.fi_f)), this.fi_f, select(store(anon(heap), this.fi_f, select(anon(heap), this.fi_f)), this.fi_f)), this.fint_f, 47), this.fj_f)), this.ff_f, fut_20)), this.fb_f, 1), this.ffb_f)), this.fj_f, NEW3_0), this.fj_f, NEW3_0), this.fj_f, select(store(store(store(store(anon(store(store(store(store(store(anon(heap), this.fi_f, select(anon(heap), this.fi_f)), this.fi_f, select(store(anon(heap), this.fi_f, select(anon(heap), this.fi_f)), this.fi_f)), this.fint_f, 47), this.fj_f, select(store(store(store(anon(heap), this.fi_f, select(anon(heap), this.fi_f)), this.fi_f, select(store(anon(heap), this.fi_f, select(anon(heap), this.fi_f)), this.fi_f)), this.fint_f, 47), this.fj_f)), this.ff_f, fut_20)), this.fb_f, 1), this.ffb_f, select(store(anon(store(store(store(store(store(anon(heap), this.fi_f, select(anon(heap), this.fi_f)), this.fi_f, select(store(anon(heap), this.fi_f, select(anon(heap), this.fi_f)), this.fi_f)), this.fint_f, 47), this.fj_f, select(store(store(store(anon(heap), this.fi_f, select(anon(heap), this.fi_f)), this.fi_f, select(store(anon(heap), this.fi_f, select(anon(heap), this.fi_f)), this.fi_f)), this.fint_f, 47), this.fj_f)), this.ff_f, fut_20)), this.fb_f, 1), this.ffb_f)), this.fj_f, NEW3_0), this.fj_f, NEW3_0), this.fj_f)), this.fi_f)=0	
			}
		}
	}
}

{
	Ce x = new CeFrame();
	x.ce();
}
