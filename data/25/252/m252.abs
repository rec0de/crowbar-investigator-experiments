module MockABS;

data Spec = Ensures(Bool) | Requires(Bool);

// Static base definitions
interface I { Int n(); Bool b(); }
interface J { Unit m(Int v); I getI(Bool flag, Int c); }
class D implements I { Int n() { return 0; } Bool b() { return False; } }
class E implements J { Unit m(Int v) { } I getI(Bool flag, Int c) { I res = new D(); return res; } }

class Generated {
Int fint = 0;
Bool fb = True;
Fut<Int> ff;
Fut<Bool> ffb;
I fi = null;
J fj = null;

[Spec : Ensures(result == 0)]
Int gen() {
Int res =(this.ff ).get;
res = this.fint;
this.fint = this.ff.get;
res = 877;
this.ffb = this.fi!b();
res = this.ff.get;
await True;
this.fi = new D();
while( False || False) {
	Bool canSave = this.ffb.get;
	Int k = - 391 + - 287;
	
}
res = 651;
return 229;
}
}
{}