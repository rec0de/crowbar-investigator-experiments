module Counterexample;
interface Ce { Unit ce(); }

class CeFrame implements Ce {
	Bool fb = True;
	String ffb = "fut_?(1)";
	String ff = "fut_?(0)";
	String fi = null;
	Int fint = 0;
	String fj = null;

	Unit ce() {
		// Assume the following pre-state:
		Bool execFlag = True;
		// End of setup
		
		while((execFlag && this.fb)){} 
		// Known true:
		// Negated loop guard: !((execFlag && this.fb))
		// Loop invariant: true
		
		// Bool isRead = (this.ffb).get;
		Bool isRead = False;
		execFlag = (True || !this.fb);
		execFlag = (798 != 136200);
		Bool canSave = (this.ffb == this.ffb);
		// this.ff = this.fi!n();
		this.ff = "fut_38";
		
		// await ((!False && canSave) || True);
		// No heap modification info available at this point
		
		this.fint = 155;
		}
		}
		this.fint = (-325 * this.fint);
		String tree = this.fi;
		if(True){
			String node = this.fj;
		}
		// tree = new D();
		tree = "object_1";
		this.fj = this.fj;
		println(toString(5)); // return statement
		// Evaluates to: 5
		// Proof failed here. Trying to show:
		// Method postcondition: result=0
		// Object invariant: true
		// Failed to show the following sub-obligations:
		// 5=0
	}
}

{
	Ce x = new CeFrame();
	x.ce();
}
