module MockABS;

data Spec = Ensures(Bool) | Requires(Bool);

// Static base definitions
interface I { Int n(); Bool b(); }
interface J { Unit m(Int v); I getI(Bool flag, Int c); }
class D implements I { Int n() { return 0; } Bool b() { return False; } }
class E implements J { Unit m(Int v) { } I getI(Bool flag, Int c) { I res = new D(); return res; } }

class Generated {
Int fint = 0;
Bool fb = True;
Fut<Int> ff;
Fut<Bool> ffb;
I fi = null;
J fj = null;

[Spec : Ensures(result == 0)]
Int gen() {
this.ffb = this.ffb;
this.ffb = this.fi!b();
this.ffb = this.fi!b();
this.fint = this.fint;
this.fj =(this.fj);
this.fint = 604;
this.ff = this.fi!n();
this.fi = new D();
J node = new E();
this.fint = 469 * this.fint;
if( this.fb &&! this.fb ==! False) {
	this.ff = this.ff;
	
}
else {
	this.fi = new D();
	
}
Bool hasDone = this.ffb.get;
node = this.fj;
this.ff = this.ff;
this.fb = True && True && True || False || False;
Int systemAmount = 984;
J clientUnit = this.fj;
this.fb = this.fb;
this.fj = node;
clientUnit = this.fj;
this.fb =(this.fint - - 177 != 813 *(- 522)) || True;
Int stackAmount = - 701;
this.fi = new D();
this.ffb = this.fi!b();
node = clientUnit;
this.fint = systemAmount;
node = new E();
systemAmount = -(- 270 + systemAmount + systemAmount * - 530 + - 955 - 67);
I tree = this.fi;
J message = new E();
this.fb =! True;
hasDone = False;
return - 455;
}
}
{}