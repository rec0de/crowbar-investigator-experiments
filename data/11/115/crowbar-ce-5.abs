module Counterexample;
interface Ce { Unit ce(); }

class CeFrame implements Ce {
	String fi = "object_?(4)";
	String fj = "object_?(4)";
	String ff = "fut_?(0)";

	Unit ce() {
		
		// Known true:
		// Loop guard: (True || (!True && False))
		// Loop invariant: true
		// while((True || (!True && False))) {
		{
			// this.fj = new E();
			this.fj = "object_1";
			// Int listAmount = (this.ff).get;
			// Future value irrelevant or unavailable, using default:
			Int listAmount = 0;
			Int processDepth = 240;
			// this.fi = new D();
			this.fi = "object_2";
			
			// await this.ffb?;
			// Assume the following assignments while blocked:
			this.fi = null;
			this.fj = "object_?(5)";
			// End assignments
			
		
		// Proof failed here. Trying to show:
		// Null-check: !select(heap, this.fi_f)=0
		// Failed to show the following sub-obligations:
		// !select(anon(store(store(store(store(heap, this.fj_f, NEW6_0), this.fj_f, NEW6_0), this.fi_f, NEW7_0), this.fi_f, NEW7_0)), this.fi_f)=0
		}
	}
}

{
	Ce x = new CeFrame();
	x.ce();
}
