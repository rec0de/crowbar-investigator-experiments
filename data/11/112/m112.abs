module MockABS;

data Spec = Ensures(Bool) | Requires(Bool);

// Static base definitions
interface I { Int n(); Bool b(); }
interface J { Unit m(Int v); I getI(Bool flag, Int c); }
class D implements I { Int n() { return 0; } Bool b() { return False; } }
class E implements J { Unit m(Int v) { } I getI(Bool flag, Int c) { I res = new D(); return res; } }

class Generated {
Int fint = 0;
Bool fb = True;
Fut<Int> ff;
Fut<Bool> ffb;
I fi = null;
J fj = null;

[Spec : Ensures(result == 0)]
Int gen() {
this.fint = this.fint + 741;
Int stackDepth = 166;
stackDepth = - stackDepth;
this.ff = this.ff;
this.fi = this.fi;
if( this.fb && False) {
	Int res =((586) * - 860 +(- this.fint));
	this.fb = this.fb;
	await this.ff?;
	
}
else {
	this.fint = 883;
	this.ff =(this.ff);
	this.ff =(this.fi )!n();
	this.ffb = this.fi!b();
	this.fb = 91 != 222;
	await this.ffb?;
	Int res = stackDepth;
	this.fj = this.fj;
	
}
this.fj = new E();
this.ffb = this.fi!b();
return - 832;
}
}
{}