module Counterexample;
interface Ce { Unit ce(); }

class CeFrame implements Ce {
	String fj = null;
	String ffb = "fut_?(0)";
	Int fint = 0;
	String fi = null;
	Bool fb = False;

	Unit ce() {
		
		while(False){} 
		// Known true:
		// Negated loop guard: !(False)
		// Loop invariant: true
		
		String message = this.fj;
		this.ffb = this.ffb;
		Int processCounter = (this.fint * 4);
		// this.ffb = this.fi!b();
		this.ffb = "fut_12";
		this.fj = message;
		
		// await this.ff?;
		// No heap modification info available at this point
		
		// J ioObject = new E();
		String ioObject = "object_1";
		}
		}
		this.fb = this.fb;
		// Bool willWrite = (this.ffb).get;
		// Future value irrelevant or unavailable, using default:
		Bool willWrite = False;
		this.fi = this.fi;
		this.fint = 270;
		println(toString(476)); // return statement
		// Evaluates to: 476
		// Proof failed here. Trying to show:
		// Method postcondition: result=0
		// Object invariant: true
		// Failed to show the following sub-obligations:
		// 476=0
	}
}

{
	Ce x = new CeFrame();
	x.ce();
}
