module MockABS;

data Spec = Ensures(Bool) | Requires(Bool);

// Static base definitions
interface I { Int n(); Bool b(); }
interface J { Unit m(Int v); I getI(Bool flag, Int c); }
class D implements I { Int n() { return 0; } Bool b() { return False; } }
class E implements J { Unit m(Int v) { } I getI(Bool flag, Int c) { I res = new D(); return res; } }

class Generated {
Int fint = 0;
Bool fb = True;
Fut<Int> ff;
Fut<Bool> ffb;
I fi = null;
J fj = null;

[Spec : Ensures(result == 0)]
Int gen() {
Int l = this.fint;
Int systemDepth = this.ff.get;
this.fint = l;
I dataRepresentation = this.fi;
if( this.fb) {
	l = - l;
	
}
this.ff = this.ff;
dataRepresentation = dataRepresentation;
Bool storageToggle = True ==! this.fb || this.fb;
this.ff = this.ff;
this.ffb = this.fi!b();
l =(945);
l = 50 - 361 + 164;
await this.ff?;
return 149;
}
}
{}