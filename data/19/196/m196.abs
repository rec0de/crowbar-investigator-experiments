module MockABS;

data Spec = Ensures(Bool) | Requires(Bool);

// Static base definitions
interface I { Int n(); Bool b(); }
interface J { Unit m(Int v); I getI(Bool flag, Int c); }
class D implements I { Int n() { return 0; } Bool b() { return False; } }
class E implements J { Unit m(Int v) { } I getI(Bool flag, Int c) { I res = new D(); return res; } }

class Generated {
Int fint = 0;
Bool fb = True;
Fut<Int> ff;
Fut<Bool> ffb;
I fi = null;
J fj = null;

[Spec : Ensures(result == 0)]
Int gen() {
this.ff = this.fi!n();
this.fj = new E();
if( False || True) {
	this.ff = this.fi!n();
	
}
else {
	this.fj = new E();
	this.fj = new E();
	I dataNode = new D();
	this.fj = new E();
	Int i = 433 * 357 + 664 * 193;
	Bool willSave = 369 >= this.fint * 425 * this.fint;
	await this.ff?;
	
}
this.ffb = this.fi!b();
this.ff = this.ff;
this.fb = True &&! this.fb;
this.fb = 30 ==(428 * 669);
this.ffb = this.fi!b();
this.fint = this.fint * 974;
while(! False || this.fb || True) {
	if( 531 + 251 * - 895 > 926) {
		J ioObject = this.fj;
		I message = new D();
		
	}
	else {
		Bool storageFlag = this.fint != 638;
		this.ff = this.fi!n();
		this.fi = this.fi;
		
	}
	while( 259 * 335 > - 136) {
		Fut<Bool> flushChanges = this.fi!b();
		J dataStruct = this.fj;
		this.fint = - 567;
		flushChanges =(this.fi )!b();
		I packetStruct = new D();
		flushChanges = flushChanges;
		
	}
	while( this.fb) {
		Fut<Bool> flushUpdates = this.fi!b();
		Fut<Int> applyFlag =(this.fi )!n();
		applyFlag = this.fi!n();
		await this.ff?;
		flushUpdates = this.fi!b();
		
	}
	
}
this.ffb =(this.ffb);
this.ffb = this.fi!b();
return 632 * this.fint;
}
}
{}